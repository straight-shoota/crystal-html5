{"repository_name":"github.com/naqvis/crystal-html5","body":"# Crystal-HTML5\n[![Build Status](https://travis-ci.org/naqvis/crystal-html5.svg?branch=master)](https://travis-ci.org/naqvis/crystal-html5)\n[![GitHub release](https://img.shields.io/github/release/naqvis/crystal-html5.svg)](https://github.com/naqvis/crystal-html5/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://naqvis.github.io/crystal-html5/)\n\nCrystal-HTML5 shard is a **Pure Crystal** implementation of an **HTML5-compliant** `Tokenizer` and `Parser`.\nThe relevant specifications include:\n- [https://html.spec.whatwg.org/multipage/syntax.html](https://html.spec.whatwg.org/multipage/syntax.html)\n- [https://html.spec.whatwg.org/multipage/syntax.html#tokenization](https://html.spec.whatwg.org/multipage/syntax.html#tokenization)\n\nTokenization is done by creating a `Tokenizer` for an `IO`. It is the caller\nresponsibility to ensure that provided IO provides UTF-8 encoded HTML.\nThe tokenization algorithm implemented by this shard is not a line-by-line\ntransliteration of the relatively verbose state-machine in the **WHATWG**\nspecification. A more direct approach is used instead, where the program\ncounter implies the state, such as whether it is tokenizing a tag or a text\nnode. Specification compliance is verified by checking expected and actual\noutputs over a test suite rather than aiming for algorithmic fidelity.\n\nParsing is done by calling `HTML5.parse` with either a String containing HTML\nor an IO instance. `HTML5.parse` returns a document root as `HTML5::Node` instance.\n\nParsing a fragment is done by calling `HTML5.parse_fragment` with either a String containing fragment of HTML5\nor an IO instance. If the fragment is the InnerHTML for an existing element, pass that element in context.\n`HTML5.parse_fragment` returns a list of `HTML5::Node` that were found.\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     html:\n       github: naqvis/crystal-html5\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n### Example 1: Process each anchor `<a>` node.\n```crystal\nrequire \"html5\"\n\nhtml = <<-HTML\n<!DOCTYPE html><html lang=\"en-US\">\n<head>\n<title>Hello,World!</title>\n</head>\n<body>\n<div class=\"container\">\n<header>\n\t<!-- Logo -->\n   <h1>City Gallery</h1>\n</header>\n<nav>\n  <ul>\n    <li><a href=\"/London\">London</a></li>\n    <li><a href=\"/Paris\">Paris</a></li>\n    <li><a href=\"/Tokyo\">Tokyo</a></li>\n  </ul>\n</nav>\n<article>\n  <h1>London</h1>\n  <img src=\"pic_mountain.jpg\" alt=\"Mountain View\" style=\"width:304px;height:228px;\">\n  <p>London is the capital city of England. It is the most populous city in the  United Kingdom, with a metropolitan area of over 13 million inhabitants.</p>\n  <p>Standing on the River Thames, London has been a major settlement for two millennia, its history going back to its founding by the Romans, who named it Londinium.</p>\n</article>\n<footer>Copyright &copy; W3Schools.com</footer>\n</div>\n</body>\n</html>\nHTML5\n\ndef process(node)\n  if node.element? && node.data == \"a\"\n    # Do something with node\n    href = node[\"href\"]?\n    puts \"#{node.first_child.try &.data} =>  #{href.try &.val}\"\n\n    # print all attributes\n    node.attr.each do |a|\n      # puts \"#{a.key} = \\\"#{a.val}\\\"\"\n    end\n  end\n  c = node.first_child\n  while c\n    process(c)\n    c = c.next_sibling\n  end\nend\n\ndoc = HTML5.parse(html)\nprocess(doc)\n\n# Output\n# London =>  /London\n# Paris =>  /Paris\n# Tokyo =>  /Tokyo\n```\n\n### Example 2: Parse an HTML or Fragment of HTML\n```crystal\nrequire \"html5\"\n\ndef parse_html(html, context)\n  if context.empty?\n    doc = HTML5.parse(html)\n  else\n    namespace = \"\"\n    if (i = context.index(' ')) && (i >= 0)\n      namespace, context = context[...i], context[i + 1..]\n    end\n    cnode = HTML5::Node.new(\n      type: HTML5::NodeType::Element,\n      data_atom: HTML5::Atom.lookup(context.to_slice),\n      data: context,\n      namespace: namespace,\n    )\n\n    nodes = HTML5.parse_fragment(html, cnode)\n    doc = HTML5::Node.new(type: HTML5::NodeType::Document)\n    nodes.each do |n|\n      doc.append_child(n)\n    end\n  end\n  doc\nend\n\nhtml = %(<p>Links:</p><ul><li><a href=\"foo\">Foo</a><li><a href=\"/bar/baz\">BarBaz</a></ul>)\ndoc = parse_html(html, \"body\")\nprocess(doc)\n\n# Output\n# Foo =>  foo\n# BarBaz =>  /bar/baz\n```\n\n### Example 3: Render `HTML5::Node` to HTML\n```crystal\nrequire \"html5\"\n\nhtml = %(<p>Links:</p><ul><li><a href=\"foo\">Foo</a><li><a href=\"/bar/baz\">BarBaz</a></ul>)\ndoc = HTML5.parse(html)\ndoc.render(STDOUT)\n\n# Output\n# <html><head></head><body><p>Links:</p><ul><li><a href=\"foo\">Foo</a></li><li><a href=\"/bar/baz\">BarBaz</a></li></ul></body></html>\n```\n\n### Example 3: XPath Query\n```crystal\nrequire \"html5\"\n\nhtml = %(<p>Links:</p><ul><li><a href=\"foo\">Foo</a><li><a href=\"/bar/baz\">BarBaz</a></ul>)\ndoc = HTML5.parse(html)\n\n# Find all A elements\nlist = html.xpath_nodes(\"//a\")\n\n# Find all A elements that have `href` attribute.\nlist = html.xpath_nodes(\"//a[@href]\")\n\n# Find all A elements with `href` attribute and only return `href` value.\nlist = html.xpath_nodes(\"//a/@href\")\nlist.each {|a| pp a.inner_text}\n\n# Find the second `a` element\na = html.xpath(\"//a[3]\")\n\n# Count the number of all a elements.\nv = html.xpath_float(\"//a\")\n```\n\nRefer to specs for more sample usages. And refer to [Crystal XPath2 Shard](https://github.com/naqvis/crystal-xpath2) for details of what functions and functionality is supported by XPath implementation.\n\n## Development\n\nTo run all tests:\n\n```\ncrystal spec\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/naqvis/crystal-html5/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Ali Naqvi](https://github.com/naqvis) - creator and maintainer\n","program":{"html_id":"github.com/naqvis/crystal-html5/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/naqvis/crystal-html5","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/crystal-html5/HTML5","path":"HTML5.html","kind":"module","full_name":"HTML5","name":"HTML5","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"html.cr","line_number":16,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr"},{"filename":"html/const.cr","line_number":1,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/const.cr"},{"filename":"html/doctype.cr","line_number":1,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/doctype.cr"},{"filename":"html/entity.cr","line_number":1,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/entity.cr"},{"filename":"html/escape.cr","line_number":1,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/escape.cr"},{"filename":"html/foreign.cr","line_number":1,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/foreign.cr"},{"filename":"html/insertion_mode.cr","line_number":3,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/insertion_mode.cr"},{"filename":"html/token.cr","line_number":3,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr"},{"filename":"html/node.cr","line_number":4,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr"},{"filename":"html/parser.cr","line_number":5,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/parser.cr"},{"filename":"html/xpath/xpath.cr","line_number":4,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/xpath/xpath.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"}],"subclasses":[],"including_types":[],"namespace":null,"doc":"HTML5 module implements an **HTML5-compliant** `Tokenizer` and `Parser`.\nThe relevant specifications include:\nhttps://html.spec.whatwg.org/multipage/syntax.html and\nhttps://html.spec.whatwg.org/multipage/syntax.html#tokenization\nTokenization is done by creating a `Tokenizer` for an `IO`. It is the caller\nresponsibility to ensure that provided IO provides UTF-8 encoded HTML.\nThe tokenization algorithm implemented by this package is not a line-by-line\ntransliteration of the relatively verbose state-machine in the WHATWG\nspecification. A more direct approach is used instead, where the program\ncounter implies the state, such as whether it is tokenizing a tag or a text\nnode. Specification compliance is verified by checking expected and actual\noutputs over a test suite rather than aiming for algorithmic fidelity.\n\nParsing is done by calling `HTML5.parse` with either a String containing HTML\nor an IO instance. `HTML5.parse` returns a document root as `HTML5::Node` instance.","summary":"<p>HTML5 module implements an <strong>HTML5-compliant</strong> <code>Tokenizer</code> and <code>Parser</code>.</p>","class_methods":[{"id":"parse(io:IO,**opts)-class-method","html_id":"parse(io:IO,**opts)-class-method","name":"parse","doc":"parse returns the parse tree for the HTML from the given *io* into an `HTML5::Node`.\n\nIt implements the HTML5 parsing algorithm\n[https://html.spec.whatwg.org/multipage/syntax.html#tree-construction](https://html.spec.whatwg.org/multipage/syntax.html#tree-construction),\nwhich is very complicated. The resultant tree can contain implicitly created\nnodes that have no explicit <tag> listed in passed io's data, and nodes' parents can\ndiffer from the nesting implied by a naive processing of start and end\n<tag>s. Conversely, explicit <tag>s in passed io's data can be silently dropped,\nwith no corresponding node in the resulting tree.\n\nThe input is assumed to be UTF-8 encoded.","summary":"<p>parse returns the parse tree for the HTML from the given <em>io</em> into an <code><a href=\"HTML5/Node.html\">HTML5::Node</a></code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO, **opts)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr#L45","def":{"name":"parse","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"p = Parser.new(io, **opts)\np.parse\np.doc\n"}},{"id":"parse(html:String,**opts)-class-method","html_id":"parse(html:String,**opts)-class-method","name":"parse","doc":"parse returns the parse tree for the HTML from the given *html string* into an `HTML5::Node`.\n","summary":"<p>parse returns the parse tree for the HTML from the given <em>html string</em> into an <code><a href=\"HTML5/Node.html\">HTML5::Node</a></code>.</p>","abstract":false,"args":[{"name":"html","doc":null,"default_value":"","external_name":"html","restriction":"String"}],"args_string":"(html : String, **opts)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr#L53","def":{"name":"parse","args":[{"name":"html","doc":null,"default_value":"","external_name":"html","restriction":"String"}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parse(IO::Memory.new(html), **opts)"}},{"id":"parse_fragment(io:IO,context:Node?=nil,**opts)-class-method","html_id":"parse_fragment(io:IO,context:Node?=nil,**opts)-class-method","name":"parse_fragment","doc":"parse_fragment parses a fragment of HTML5 and returns the nodes that were\nfound. If the fragment is the InnerHTML for an existing element, pass that\nelement in context.\n\nIt has the same intricacies as `HTML5.parse`.","summary":"<p>parse_fragment parses a fragment of HTML5 and returns the nodes that were found.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Node | ::Nil"}],"args_string":"(io : IO, context : Node? = <span class=\"n\">nil</span>, **opts)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr#L62","def":{"name":"parse_fragment","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Node | ::Nil"}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"context_tag = \"\"\nif (cnode = context)\n  if cnode.type == NodeType::Element\n  else\n    raise(HTMLException.new(\"parse_fragment of non-element Node\"))\n  end\n  if cnode.data_atom == (Atom.lookup(cnode.data.to_slice))\n  else\n    raise(HTMLException.new(\"inconsistent Node: data_atom=#{cnode.data_atom}, data=#{cnode.data}\"))\n  end\n  context_tag = cnode.data_atom.to_s\nend\npopts = {frameset: false, fragment: true}.merge(opts)\np = Parser.new(io, **popts)\np.context = context\nif context.nil? || context.try do |__arg0|\n  __arg0.namespace.empty?\nend\n  p.tokenizer = Tokenizer.new(io, context_tag)\nend\nroot = Node.new(type: NodeType::Element, data_atom: Atom::Html, data: Atom::Html.to_s)\np.doc.append_child(root)\np.oe = NodeStack.new([root])\nif (cnode = context) && (cnode.data_atom == Atom::Template)\n  p.template_stack << (->ParserHelper.in_template_im(Parser))\nend\np.reset_insertion_mode\nif (cnode = context)\n  while cnode\n    if (cnode.type == NodeType::Element) && (cnode.data_atom == Atom::Form)\n      p.form = cnode\n      break\n    end\n    cnode = cnode.parent\n  end\nend\np.parse\nparent = p.doc\nif context\n  parent = root\nend\nresult = Array(Node).new\nc = parent.first_child\nwhile c\n  ns = c.next_sibling\n  parent.remove_child(c)\n  result << c\n  c = ns\nend\nresult\n"}},{"id":"parse_fragment(html:String,context:Node?=nil,**opts)-class-method","html_id":"parse_fragment(html:String,context:Node?=nil,**opts)-class-method","name":"parse_fragment","doc":null,"summary":null,"abstract":false,"args":[{"name":"html","doc":null,"default_value":"","external_name":"html","restriction":"String"},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Node | ::Nil"}],"args_string":"(html : String, context : Node? = <span class=\"n\">nil</span>, **opts)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr#L116","def":{"name":"parse_fragment","args":[{"name":"html","doc":null,"default_value":"","external_name":"html","restriction":"String"},{"name":"context","doc":null,"default_value":"nil","external_name":"context","restriction":"Node | ::Nil"}],"double_splat":{"name":"opts","doc":null,"default_value":"","external_name":"opts","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"parse_fragment(IO::Memory.new(html), context, **opts)"}},{"id":"reparent_children(dst,src:Node)-class-method","html_id":"reparent_children(dst,src:Node)-class-method","name":"reparent_children","doc":"reparents all of src's child nodes to dst","summary":"<p>reparents all of src's child nodes to dst</p>","abstract":false,"args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":""},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Node"}],"args_string":"(dst, src : Node)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L442","def":{"name":"reparent_children","args":[{"name":"dst","doc":null,"default_value":"","external_name":"dst","restriction":""},{"name":"src","doc":null,"default_value":"","external_name":"src","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do\n  child = src.first_child\n  if child.nil?\n    break\n  end\n  src.remove_child(child)\n  dst.append_child(child)\nend"}}],"constructors":[],"instance_methods":[{"id":"escape_string(s:String):String-instance-method","html_id":"escape_string(s:String):String-instance-method","name":"escape_string","doc":"escape_string escapes special characters like \"<\" to become \"&lt;\". It\nescapes only five such characters: <, >, &, ' and \".\n```unescape_string(escape_string(s)) == s``` always holds, but the converse isn't\nalways true.","summary":"<p>escape_string escapes special characters like \"&lt;\" to become \"&lt;\".</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String) : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/escape.cr#L254","def":{"name":"escape_string","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if (index_any(s, ESCAPED_CHARS)) == -1\n  return s\nend\nbuf = IO::Memory.new\nescape(buf, s)\nbuf.to_s\n"}},{"id":"unescape_string(s:String):String-instance-method","html_id":"unescape_string(s:String):String-instance-method","name":"unescape_string","doc":"unescape_string unescapes entities like \"&lt;\" to become \"<\". It unescapes a\nlarger range of entities than escape_string escapes. For example, \"&aacute;\"\nunescapes to \"á\", as does \"&#225;\" and \"&xE1;\".\nunescape_string(escape_string(s)) == s always holds, but the converse isn't\nalways true.","summary":"<p>unescape_string unescapes entities like \"&lt;\" to become \"&lt;\".</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"args_string":"(s : String) : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/escape.cr#L266","def":{"name":"unescape_string","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"s.each_char do |c|\n  if c == '&'\n    return String.new(unescape(s.to_slice, false))\n  end\nend\ns\n"}}],"macros":[],"types":[{"html_id":"github.com/naqvis/crystal-html5/HTML5/Atom","path":"HTML5/Atom.html","kind":"module","full_name":"HTML5::Atom","name":"Atom","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"html/atom/atom.cr","line_number":14,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr"},{"filename":"html/atom/table.cr","line_number":1,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/table.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"A","name":"A","value":"Atom[1]","doc":null,"summary":null},{"id":"Abbr","name":"Abbr","value":"Atom[327940]","doc":null,"summary":null},{"id":"Accept","name":"Accept","value":"Atom[6]","doc":null,"summary":null},{"id":"AcceptCharset","name":"AcceptCharset","value":"Atom[14]","doc":null,"summary":null},{"id":"Accesskey","name":"Accesskey","value":"Atom[4617]","doc":null,"summary":null},{"id":"Acronym","name":"Acronym","value":"Atom[27143]","doc":null,"summary":null},{"id":"Action","name":"Action","value":"Atom[163078]","doc":null,"summary":null},{"id":"Address","name":"Address","value":"Atom[472839]","doc":null,"summary":null},{"id":"Align","name":"Align","value":"Atom[28933]","doc":null,"summary":null},{"id":"Allowfullscreen","name":"Allowfullscreen","value":"Atom[127759]","doc":null,"summary":null},{"id":"Allowpaymentrequest","name":"Allowpaymentrequest","value":"Atom[33043]","doc":null,"summary":null},{"id":"Allowusermedia","name":"Allowusermedia","value":"Atom[40206]","doc":null,"summary":null},{"id":"Alt","name":"Alt","value":"Atom[51203]","doc":null,"summary":null},{"id":"Annotation","name":"Annotation","value":"Atom[114442]","doc":null,"summary":null},{"id":"AnnotationXml","name":"AnnotationXml","value":"Atom[114446]","doc":null,"summary":null},{"id":"Applet","name":"Applet","value":"Atom[211206]","doc":null,"summary":null},{"id":"Area","name":"Area","value":"Atom[226820]","doc":null,"summary":null},{"id":"Article","name":"Article","value":"Atom[270855]","doc":null,"summary":null},{"id":"As","name":"As","value":"Atom[8706]","doc":null,"summary":null},{"id":"Aside","name":"Aside","value":"Atom[24325]","doc":null,"summary":null},{"id":"Async","name":"Async","value":"Atom[59909]","doc":null,"summary":null},{"id":"Audio","name":"Audio","value":"Atom[64773]","doc":null,"summary":null},{"id":"Autocapitalize","name":"Autocapitalize","value":"Atom[67854]","doc":null,"summary":null},{"id":"Autocomplete","name":"Autocomplete","value":"Atom[164620]","doc":null,"summary":null},{"id":"Autofocus","name":"Autofocus","value":"Atom[71433]","doc":null,"summary":null},{"id":"Autoplay","name":"Autoplay","value":"Atom[79112]","doc":null,"summary":null},{"id":"B","name":"B","value":"Atom[3585]","doc":null,"summary":null},{"id":"Base","name":"Base","value":"Atom[8452]","doc":null,"summary":null},{"id":"Basefont","name":"Basefont","value":"Atom[8456]","doc":null,"summary":null},{"id":"Bdi","name":"Bdi","value":"Atom[31235]","doc":null,"summary":null},{"id":"Bdo","name":"Bdo","value":"Atom[82947]","doc":null,"summary":null},{"id":"Bgsound","name":"Bgsound","value":"Atom[87815]","doc":null,"summary":null},{"id":"Big","name":"Big","value":"Atom[91907]","doc":null,"summary":null},{"id":"Blink","name":"Blink","value":"Atom[92677]","doc":null,"summary":null},{"id":"Blockquote","name":"Blockquote","value":"Atom[97546]","doc":null,"summary":null},{"id":"Body","name":"Body","value":"Atom[3588]","doc":null,"summary":null},{"id":"Br","name":"Br","value":"Atom[7938]","doc":null,"summary":null},{"id":"Button","name":"Button","value":"Atom[100102]","doc":null,"summary":null},{"id":"Canvas","name":"Canvas","value":"Atom[23302]","doc":null,"summary":null},{"id":"Caption","name":"Caption","value":"Atom[147975]","doc":null,"summary":null},{"id":"Center","name":"Center","value":"Atom[140294]","doc":null,"summary":null},{"id":"Challenge","name":"Challenge","value":"Atom[173577]","doc":null,"summary":null},{"id":"Charset","name":"Charset","value":"Atom[1799]","doc":null,"summary":null},{"id":"Checked","name":"Checked","value":"Atom[236807]","doc":null,"summary":null},{"id":"Cite","name":"Cite","value":"Atom[60932]","doc":null,"summary":null},{"id":"Class","name":"Class","value":"Atom[102917]","doc":null,"summary":null},{"id":"Code","name":"Code","value":"Atom[287236]","doc":null,"summary":null},{"id":"Col","name":"Col","value":"Atom[106755]","doc":null,"summary":null},{"id":"Colgroup","name":"Colgroup","value":"Atom[106760]","doc":null,"summary":null},{"id":"Color","name":"Color","value":"Atom[111877]","doc":null,"summary":null},{"id":"Cols","name":"Cols","value":"Atom[113156]","doc":null,"summary":null},{"id":"Colspan","name":"Colspan","value":"Atom[113159]","doc":null,"summary":null},{"id":"Command","name":"Command","value":"Atom[118023]","doc":null,"summary":null},{"id":"Content","name":"Content","value":"Atom[381191]","doc":null,"summary":null},{"id":"Contenteditable","name":"Contenteditable","value":"Atom[381199]","doc":null,"summary":null},{"id":"Contextmenu","name":"Contextmenu","value":"Atom[239115]","doc":null,"summary":null},{"id":"Controls","name":"Controls","value":"Atom[122888]","doc":null,"summary":null},{"id":"Coords","name":"Coords","value":"Atom[125958]","doc":null,"summary":null},{"id":"Crossorigin","name":"Crossorigin","value":"Atom[135435]","doc":null,"summary":null},{"id":"Data","name":"Data","value":"Atom[292100]","doc":null,"summary":null},{"id":"Datalist","name":"Datalist","value":"Atom[292104]","doc":null,"summary":null},{"id":"Datetime","name":"Datetime","value":"Atom[181000]","doc":null,"summary":null},{"id":"Dd","name":"Dd","value":"Atom[188930]","doc":null,"summary":null},{"id":"Decoding","name":"Decoding","value":"Atom[25096]","doc":null,"summary":null},{"id":"Default","name":"Default","value":"Atom[287751]","doc":null,"summary":null},{"id":"Defer","name":"Defer","value":"Atom[300293]","doc":null,"summary":null},{"id":"Del","name":"Del","value":"Atom[374275]","doc":null,"summary":null},{"id":"Desc","name":"Desc","value":"Atom[22532]","doc":null,"summary":null},{"id":"Details","name":"Details","value":"Atom[47879]","doc":null,"summary":null},{"id":"Dfn","name":"Dfn","value":"Atom[51971]","doc":null,"summary":null},{"id":"Dialog","name":"Dialog","value":"Atom[31494]","doc":null,"summary":null},{"id":"Dir","name":"Dir","value":"Atom[89347]","doc":null,"summary":null},{"id":"Dirname","name":"Dirname","value":"Atom[89351]","doc":null,"summary":null},{"id":"Disabled","name":"Disabled","value":"Atom[94472]","doc":null,"summary":null},{"id":"Div","name":"Div","value":"Atom[96259]","doc":null,"summary":null},{"id":"Dl","name":"Dl","value":"Atom[402690]","doc":null,"summary":null},{"id":"Download","name":"Download","value":"Atom[305160]","doc":null,"summary":null},{"id":"Draggable","name":"Draggable","value":"Atom[119561]","doc":null,"summary":null},{"id":"Dropzone","name":"Dropzone","value":"Atom[273160]","doc":null,"summary":null},{"id":"Dt","name":"Dt","value":"Atom[426754]","doc":null,"summary":null},{"id":"Em","name":"Em","value":"Atom[21506]","doc":null,"summary":null},{"id":"Embed","name":"Embed","value":"Atom[21509]","doc":null,"summary":null},{"id":"Enctype","name":"Enctype","value":"Atom[169991]","doc":null,"summary":null},{"id":"Enterkeyhint","name":"Enterkeyhint","value":"Atom[140556]","doc":null,"summary":null},{"id":"Face","name":"Face","value":"Atom[139780]","doc":null,"summary":null},{"id":"Fieldset","name":"Fieldset","value":"Atom[145160]","doc":null,"summary":null},{"id":"Figcaption","name":"Figcaption","value":"Atom[147210]","doc":null,"summary":null},{"id":"Figure","name":"Figure","value":"Atom[152326]","doc":null,"summary":null},{"id":"Font","name":"Font","value":"Atom[9476]","doc":null,"summary":null},{"id":"Footer","name":"Footer","value":"Atom[55046]","doc":null,"summary":null},{"id":"For","name":"For","value":"Atom[155395]","doc":null,"summary":null},{"id":"ForeignObject","name":"ForeignObject","value":"Atom[155405]","doc":null,"summary":null},{"id":"Foreignobject","name":"Foreignobject","value":"Atom[158733]","doc":"HTML is case-insensitive, but SVG-embedded-in-HTML is case-sensitive.","summary":"<p>HTML is case-insensitive, but SVG-embedded-in-HTML is case-sensitive.</p>"},{"id":"Form","name":"Form","value":"Atom[162052]","doc":null,"summary":null},{"id":"Formaction","name":"Formaction","value":"Atom[162058]","doc":null,"summary":null},{"id":"Formenctype","name":"Formenctype","value":"Atom[168971]","doc":null,"summary":null},{"id":"Formmethod","name":"Formmethod","value":"Atom[175882]","doc":null,"summary":null},{"id":"Formnovalidate","name":"Formnovalidate","value":"Atom[178446]","doc":null,"summary":null},{"id":"Formtarget","name":"Formtarget","value":"Atom[183050]","doc":null,"summary":null},{"id":"Frame","name":"Frame","value":"Atom[52997]","doc":null,"summary":null},{"id":"Frameset","name":"Frameset","value":"Atom[53000]","doc":null,"summary":null},{"id":"H1","name":"H1","value":"Atom[87298]","doc":null,"summary":null},{"id":"H2","name":"H2","value":"Atom[190722]","doc":null,"summary":null},{"id":"H3","name":"H3","value":"Atom[208130]","doc":null,"summary":null},{"id":"H4","name":"H4","value":"Atom[222466]","doc":null,"summary":null},{"id":"H5","name":"H5","value":"Atom[225026]","doc":null,"summary":null},{"id":"H6","name":"H6","value":"Atom[427266]","doc":null,"summary":null},{"id":"Head","name":"Head","value":"Atom[217348]","doc":null,"summary":null},{"id":"Header","name":"Header","value":"Atom[217350]","doc":null,"summary":null},{"id":"Headers","name":"Headers","value":"Atom[217351]","doc":null,"summary":null},{"id":"Height","name":"Height","value":"Atom[14342]","doc":null,"summary":null},{"id":"Hgroup","name":"Hgroup","value":"Atom[185606]","doc":null,"summary":null},{"id":"Hidden","name":"Hidden","value":"Atom[188422]","doc":null,"summary":null},{"id":"High","name":"High","value":"Atom[189956]","doc":null,"summary":null},{"id":"Hr","name":"Hr","value":"Atom[86018]","doc":null,"summary":null},{"id":"Href","name":"Href","value":"Atom[191236]","doc":null,"summary":null},{"id":"Hreflang","name":"Hreflang","value":"Atom[191240]","doc":null,"summary":null},{"id":"Html","name":"Html","value":"Atom[15364]","doc":null,"summary":null},{"id":"HttpEquiv","name":"HttpEquiv","value":"Atom[193290]","doc":null,"summary":null},{"id":"I","name":"I","value":"Atom[10497]","doc":null,"summary":null},{"id":"Icon","name":"Icon","value":"Atom[380932]","doc":null,"summary":null},{"id":"Id","name":"Id","value":"Atom[24834]","doc":null,"summary":null},{"id":"Iframe","name":"Iframe","value":"Atom[198406]","doc":null,"summary":null},{"id":"Image","name":"Image","value":"Atom[199941]","doc":null,"summary":null},{"id":"Imagesizes","name":"Imagesizes","value":"Atom[199946]","doc":null,"summary":null},{"id":"Imagesrcset","name":"Imagesrcset","value":"Atom[203787]","doc":null,"summary":null},{"id":"Img","name":"Img","value":"Atom[206595]","doc":null,"summary":null},{"id":"Input","name":"Input","value":"Atom[298501]","doc":null,"summary":null},{"id":"Inputmode","name":"Inputmode","value":"Atom[298505]","doc":null,"summary":null},{"id":"Ins","name":"Ins","value":"Atom[137731]","doc":null,"summary":null},{"id":"Integrity","name":"Integrity","value":"Atom[142857]","doc":null,"summary":null},{"id":"Is","name":"Is","value":"Atom[94722]","doc":null,"summary":null},{"id":"Isindex","name":"Isindex","value":"Atom[208647]","doc":null,"summary":null},{"id":"Ismap","name":"Ismap","value":"Atom[210437]","doc":null,"summary":null},{"id":"Itemid","name":"Itemid","value":"Atom[241926]","doc":null,"summary":null},{"id":"Itemprop","name":"Itemprop","value":"Atom[61192]","doc":null,"summary":null},{"id":"Itemref","name":"Itemref","value":"Atom[258823]","doc":null,"summary":null},{"id":"Itemscope","name":"Itemscope","value":"Atom[439561]","doc":null,"summary":null},{"id":"Itemtype","name":"Itemtype","value":"Atom[212744]","doc":null,"summary":null},{"id":"Kbd","name":"Kbd","value":"Atom[30979]","doc":null,"summary":null},{"id":"Keygen","name":"Keygen","value":"Atom[6150]","doc":null,"summary":null},{"id":"Keytype","name":"Keytype","value":"Atom[38407]","doc":null,"summary":null},{"id":"Kind","name":"Kind","value":"Atom[93700]","doc":null,"summary":null},{"id":"Label","name":"Label","value":"Atom[16133]","doc":null,"summary":null},{"id":"Lang","name":"Lang","value":"Atom[192260]","doc":null,"summary":null},{"id":"Legend","name":"Legend","value":"Atom[121350]","doc":null,"summary":null},{"id":"Li","name":"Li","value":"Atom[29186]","doc":null,"summary":null},{"id":"Link","name":"Link","value":"Atom[92932]","doc":null,"summary":null},{"id":"List","name":"List","value":"Atom[293124]","doc":null,"summary":null},{"id":"Listing","name":"Listing","value":"Atom[293127]","doc":null,"summary":null},{"id":"Loading","name":"Loading","value":"Atom[306183]","doc":null,"summary":null},{"id":"Loop","name":"Loop","value":"Atom[17156]","doc":null,"summary":null},{"id":"Low","name":"Low","value":"Atom[33539]","doc":null,"summary":null},{"id":"Main","name":"Main","value":"Atom[332036]","doc":null,"summary":null},{"id":"Malignmark","name":"Malignmark","value":"Atom[28682]","doc":null,"summary":null},{"id":"Manifest","name":"Manifest","value":"Atom[465672]","doc":null,"summary":null},{"id":"Map","name":"Map","value":"Atom[210947]","doc":null,"summary":null},{"id":"Mark","name":"Mark","value":"Atom[30212]","doc":null,"summary":null},{"id":"Marquee","name":"Marquee","value":"Atom[214791]","doc":null,"summary":null},{"id":"Math","name":"Math","value":"Atom[216580]","doc":null,"summary":null},{"id":"Max","name":"Max","value":"Atom[220419]","doc":null,"summary":null},{"id":"Maxlength","name":"Maxlength","value":"Atom[220425]","doc":null,"summary":null},{"id":"Media","name":"Media","value":"Atom[42501]","doc":null,"summary":null},{"id":"Mediagroup","name":"Mediagroup","value":"Atom[42506]","doc":null,"summary":null},{"id":"Menu","name":"Menu","value":"Atom[240900]","doc":null,"summary":null},{"id":"Menuitem","name":"Menuitem","value":"Atom[240904]","doc":null,"summary":null},{"id":"Meta","name":"Meta","value":"Atom[326148]","doc":null,"summary":null},{"id":"Meter","name":"Meter","value":"Atom[90629]","doc":null,"summary":null},{"id":"Method","name":"Method","value":"Atom[176902]","doc":null,"summary":null},{"id":"Mglyph","name":"Mglyph","value":"Atom[206854]","doc":null,"summary":null},{"id":"Mi","name":"Mi","value":"Atom[222978]","doc":null,"summary":null},{"id":"Min","name":"Min","value":"Atom[222979]","doc":null,"summary":null},{"id":"Minlength","name":"Minlength","value":"Atom[222985]","doc":null,"summary":null},{"id":"Mn","name":"Mn","value":"Atom[179202]","doc":null,"summary":null},{"id":"Mo","name":"Mo","value":"Atom[58370]","doc":null,"summary":null},{"id":"Ms","name":"Ms","value":"Atom[440322]","doc":null,"summary":null},{"id":"Mtext","name":"Mtext","value":"Atom[225541]","doc":null,"summary":null},{"id":"Multiple","name":"Multiple","value":"Atom[229128]","doc":null,"summary":null},{"id":"Muted","name":"Muted","value":"Atom[231173]","doc":null,"summary":null},{"id":"Name","name":"Name","value":"Atom[90116]","doc":null,"summary":null},{"id":"Nav","name":"Nav","value":"Atom[332803]","doc":null,"summary":null},{"id":"Nobr","name":"Nobr","value":"Atom[7428]","doc":null,"summary":null},{"id":"Noembed","name":"Noembed","value":"Atom[20999]","doc":null,"summary":null},{"id":"Noframes","name":"Noframes","value":"Atom[52488]","doc":null,"summary":null},{"id":"Nomodule","name":"Nomodule","value":"Atom[57864]","doc":null,"summary":null},{"id":"Nonce","name":"Nonce","value":"Atom[63493]","doc":null,"summary":null},{"id":"Noscript","name":"Noscript","value":"Atom[131336]","doc":null,"summary":null},{"id":"Novalidate","name":"Novalidate","value":"Atom[179466]","doc":null,"summary":null},{"id":"Object","name":"Object","value":"Atom[160518]","doc":null,"summary":null},{"id":"Ol","name":"Ol","value":"Atom[77058]","doc":null,"summary":null},{"id":"Onabort","name":"Onabort","value":"Atom[101127]","doc":null,"summary":null},{"id":"Onafterprint","name":"Onafterprint","value":"Atom[149260]","doc":null,"summary":null},{"id":"Onautocomplete","name":"Onautocomplete","value":"Atom[164110]","doc":null,"summary":null},{"id":"Onautocompleteerror","name":"Onautocompleteerror","value":"Atom[164115]","doc":null,"summary":null},{"id":"Onauxclick","name":"Onauxclick","value":"Atom[415498]","doc":null,"summary":null},{"id":"Onbeforeprint","name":"Onbeforeprint","value":"Atom[451085]","doc":null,"summary":null},{"id":"Onbeforeunload","name":"Onbeforeunload","value":"Atom[469774]","doc":null,"summary":null},{"id":"Onblur","name":"Onblur","value":"Atom[105222]","doc":null,"summary":null},{"id":"Oncancel","name":"Oncancel","value":"Atom[65800]","doc":null,"summary":null},{"id":"Oncanplay","name":"Oncanplay","value":"Atom[83465]","doc":null,"summary":null},{"id":"Oncanplaythrough","name":"Oncanplaythrough","value":"Atom[83472]","doc":null,"summary":null},{"id":"Onchange","name":"Onchange","value":"Atom[278792]","doc":null,"summary":null},{"id":"Onclick","name":"Onclick","value":"Atom[196615]","doc":null,"summary":null},{"id":"Onclose","name":"Onclose","value":"Atom[232455]","doc":null,"summary":null},{"id":"Oncontextmenu","name":"Oncontextmenu","value":"Atom[238605]","doc":null,"summary":null},{"id":"Oncopy","name":"Oncopy","value":"Atom[243462]","doc":null,"summary":null},{"id":"Oncuechange","name":"Oncuechange","value":"Atom[245003]","doc":null,"summary":null},{"id":"Oncut","name":"Oncut","value":"Atom[247813]","doc":null,"summary":null},{"id":"Ondblclick","name":"Ondblclick","value":"Atom[249098]","doc":null,"summary":null},{"id":"Ondrag","name":"Ondrag","value":"Atom[251654]","doc":null,"summary":null},{"id":"Ondragend","name":"Ondragend","value":"Atom[251657]","doc":null,"summary":null},{"id":"Ondragenter","name":"Ondragenter","value":"Atom[253963]","doc":null,"summary":null},{"id":"Ondragexit","name":"Ondragexit","value":"Atom[256778]","doc":null,"summary":null},{"id":"Ondragleave","name":"Ondragleave","value":"Atom[263435]","doc":null,"summary":null},{"id":"Ondragover","name":"Ondragover","value":"Atom[266250]","doc":null,"summary":null},{"id":"Ondragstart","name":"Ondragstart","value":"Atom[268811]","doc":null,"summary":null},{"id":"Ondrop","name":"Ondrop","value":"Atom[272646]","doc":null,"summary":null},{"id":"Ondurationchange","name":"Ondurationchange","value":"Atom[276752]","doc":null,"summary":null},{"id":"Onemptied","name":"Onemptied","value":"Atom[274441]","doc":null,"summary":null},{"id":"Onended","name":"Onended","value":"Atom[280839]","doc":null,"summary":null},{"id":"Onerror","name":"Onerror","value":"Atom[282631]","doc":null,"summary":null},{"id":"Onfocus","name":"Onfocus","value":"Atom[284423]","doc":null,"summary":null},{"id":"Onformdata","name":"Onformdata","value":"Atom[290570]","doc":null,"summary":null},{"id":"Onhashchange","name":"Onhashchange","value":"Atom[294924]","doc":null,"summary":null},{"id":"Oninput","name":"Oninput","value":"Atom[297991]","doc":null,"summary":null},{"id":"Oninvalid","name":"Oninvalid","value":"Atom[301577]","doc":null,"summary":null},{"id":"Onkeydown","name":"Onkeydown","value":"Atom[303881]","doc":null,"summary":null},{"id":"Onkeypress","name":"Onkeypress","value":"Atom[307978]","doc":null,"summary":null},{"id":"Onkeyup","name":"Onkeyup","value":"Atom[312071]","doc":null,"summary":null},{"id":"Onlanguagechange","name":"Onlanguagechange","value":"Atom[315408]","doc":null,"summary":null},{"id":"Onload","name":"Onload","value":"Atom[319494]","doc":null,"summary":null},{"id":"Onloadeddata","name":"Onloadeddata","value":"Atom[319500]","doc":null,"summary":null},{"id":"Onloadedmetadata","name":"Onloadedmetadata","value":"Atom[324112]","doc":null,"summary":null},{"id":"Onloadend","name":"Onloadend","value":"Atom[334601]","doc":null,"summary":null},{"id":"Onloadstart","name":"Onloadstart","value":"Atom[336907]","doc":null,"summary":null},{"id":"Onmessage","name":"Onmessage","value":"Atom[339721]","doc":null,"summary":null},{"id":"Onmessageerror","name":"Onmessageerror","value":"Atom[339726]","doc":null,"summary":null},{"id":"Onmousedown","name":"Onmousedown","value":"Atom[343307]","doc":null,"summary":null},{"id":"Onmouseenter","name":"Onmouseenter","value":"Atom[346124]","doc":null,"summary":null},{"id":"Onmouseleave","name":"Onmouseleave","value":"Atom[349196]","doc":null,"summary":null},{"id":"Onmousemove","name":"Onmousemove","value":"Atom[352267]","doc":null,"summary":null},{"id":"Onmouseout","name":"Onmouseout","value":"Atom[355082]","doc":null,"summary":null},{"id":"Onmouseover","name":"Onmouseover","value":"Atom[358411]","doc":null,"summary":null},{"id":"Onmouseup","name":"Onmouseup","value":"Atom[361225]","doc":null,"summary":null},{"id":"Onmousewheel","name":"Onmousewheel","value":"Atom[364812]","doc":null,"summary":null},{"id":"Onoffline","name":"Onoffline","value":"Atom[367881]","doc":null,"summary":null},{"id":"Ononline","name":"Ononline","value":"Atom[370184]","doc":null,"summary":null},{"id":"Onpagehide","name":"Onpagehide","value":"Atom[372234]","doc":null,"summary":null},{"id":"Onpageshow","name":"Onpageshow","value":"Atom[375050]","doc":null,"summary":null},{"id":"Onpaste","name":"Onpaste","value":"Atom[378119]","doc":null,"summary":null},{"id":"Onpause","name":"Onpause","value":"Atom[385031]","doc":null,"summary":null},{"id":"Onplay","name":"Onplay","value":"Atom[387590]","doc":null,"summary":null},{"id":"Onplaying","name":"Onplaying","value":"Atom[387593]","doc":null,"summary":null},{"id":"Onpopstate","name":"Onpopstate","value":"Atom[389898]","doc":null,"summary":null},{"id":"Onprogress","name":"Onprogress","value":"Atom[392458]","doc":null,"summary":null},{"id":"Onratechange","name":"Onratechange","value":"Atom[396044]","doc":null,"summary":null},{"id":"Onrejectionhandled","name":"Onrejectionhandled","value":"Atom[399122]","doc":null,"summary":null},{"id":"Onreset","name":"Onreset","value":"Atom[403719]","doc":null,"summary":null},{"id":"Onresize","name":"Onresize","value":"Atom[405512]","doc":null,"summary":null},{"id":"Onscroll","name":"Onscroll","value":"Atom[407560]","doc":null,"summary":null},{"id":"Onsecuritypolicyviolation","name":"Onsecuritypolicyviolation","value":"Atom[409625]","doc":null,"summary":null},{"id":"Onseeked","name":"Onseeked","value":"Atom[418056]","doc":null,"summary":null},{"id":"Onseeking","name":"Onseeking","value":"Atom[420105]","doc":null,"summary":null},{"id":"Onselect","name":"Onselect","value":"Atom[422408]","doc":null,"summary":null},{"id":"Onshow","name":"Onshow","value":"Atom[424966]","doc":null,"summary":null},{"id":"Onslotchange","name":"Onslotchange","value":"Atom[427788]","doc":null,"summary":null},{"id":"Onsort","name":"Onsort","value":"Atom[430854]","doc":null,"summary":null},{"id":"Onstalled","name":"Onstalled","value":"Atom[433417]","doc":null,"summary":null},{"id":"Onstorage","name":"Onstorage","value":"Atom[435721]","doc":null,"summary":null},{"id":"Onsubmit","name":"Onsubmit","value":"Atom[438024]","doc":null,"summary":null},{"id":"Onsuspend","name":"Onsuspend","value":"Atom[442121]","doc":null,"summary":null},{"id":"Ontimeupdate","name":"Ontimeupdate","value":"Atom[9740]","doc":null,"summary":null},{"id":"Ontoggle","name":"Ontoggle","value":"Atom[444424]","doc":null,"summary":null},{"id":"Onunhandledrejection","name":"Onunhandledrejection","value":"Atom[446484]","doc":null,"summary":null},{"id":"Onunload","name":"Onunload","value":"Atom[454408]","doc":null,"summary":null},{"id":"Onvolumechange","name":"Onvolumechange","value":"Atom[456462]","doc":null,"summary":null},{"id":"Onwaiting","name":"Onwaiting","value":"Atom[460041]","doc":null,"summary":null},{"id":"Onwheel","name":"Onwheel","value":"Atom[462343]","doc":null,"summary":null},{"id":"Open","name":"Open","value":"Atom[62724]","doc":null,"summary":null},{"id":"Optgroup","name":"Optgroup","value":"Atom[17672]","doc":null,"summary":null},{"id":"Optimum","name":"Optimum","value":"Atom[464135]","doc":null,"summary":null},{"id":"Option","name":"Option","value":"Atom[468742]","doc":null,"summary":null},{"id":"Output","name":"Output","value":"Atom[356870]","doc":null,"summary":null},{"id":"P","name":"P","value":"Atom[1025]","doc":null,"summary":null},{"id":"Param","name":"Param","value":"Atom[331013]","doc":null,"summary":null},{"id":"Pattern","name":"Pattern","value":"Atom[19463]","doc":null,"summary":null},{"id":"Picture","name":"Picture","value":"Atom[44807]","doc":null,"summary":null},{"id":"Ping","name":"Ping","value":"Atom[50180]","doc":null,"summary":null},{"id":"Placeholder","name":"Placeholder","value":"Atom[75531]","doc":null,"summary":null},{"id":"Plaintext","name":"Plaintext","value":"Atom[108553]","doc":null,"summary":null},{"id":"Playsinline","name":"Playsinline","value":"Atom[80139]","doc":null,"summary":null},{"id":"Poster","name":"Poster","value":"Atom[186886]","doc":null,"summary":null},{"id":"Pre","name":"Pre","value":"Atom[309251]","doc":null,"summary":null},{"id":"Preload","name":"Preload","value":"Atom[313607]","doc":null,"summary":null},{"id":"Progress","name":"Progress","value":"Atom[392968]","doc":null,"summary":null},{"id":"Prompt","name":"Prompt","value":"Atom[363270]","doc":null,"summary":null},{"id":"Public","name":"Public","value":"Atom[379910]","doc":null,"summary":null},{"id":"Q","name":"Q","value":"Atom[36609]","doc":null,"summary":null},{"id":"Radiogroup","name":"Radiogroup","value":"Atom[328714]","doc":null,"summary":null},{"id":"Rb","name":"Rb","value":"Atom[8194]","doc":null,"summary":null},{"id":"Readonly","name":"Readonly","value":"Atom[227080]","doc":null,"summary":null},{"id":"Referrerpolicy","name":"Referrerpolicy","value":"Atom[259854]","doc":null,"summary":null},{"id":"Rel","name":"Rel","value":"Atom[313859]","doc":null,"summary":null},{"id":"Required","name":"Required","value":"Atom[153352]","doc":null,"summary":null},{"id":"Reversed","name":"Reversed","value":"Atom[46088]","doc":null,"summary":null},{"id":"Rows","name":"Rows","value":"Atom[56324]","doc":null,"summary":null},{"id":"Rowspan","name":"Rowspan","value":"Atom[56327]","doc":null,"summary":null},{"id":"Rp","name":"Rp","value":"Atom[150786]","doc":null,"summary":null},{"id":"Rt","name":"Rt","value":"Atom[102402]","doc":null,"summary":null},{"id":"Rtc","name":"Rtc","value":"Atom[102403]","doc":null,"summary":null},{"id":"Ruby","name":"Ruby","value":"Atom[78084]","doc":null,"summary":null},{"id":"S","name":"S","value":"Atom[2817]","doc":null,"summary":null},{"id":"Samp","name":"Samp","value":"Atom[49412]","doc":null,"summary":null},{"id":"Sandbox","name":"Sandbox","value":"Atom[73479]","doc":null,"summary":null},{"id":"Scope","name":"Scope","value":"Atom[440581]","doc":null,"summary":null},{"id":"Scoped","name":"Scoped","value":"Atom[440582]","doc":null,"summary":null},{"id":"Script","name":"Script","value":"Atom[131846]","doc":null,"summary":null},{"id":"Seamless","name":"Seamless","value":"Atom[233736]","doc":null,"summary":null},{"id":"Section","name":"Section","value":"Atom[103943]","doc":null,"summary":null},{"id":"Select","name":"Select","value":"Atom[422918]","doc":null,"summary":null},{"id":"Selected","name":"Selected","value":"Atom[422920]","doc":null,"summary":null},{"id":"Shape","name":"Shape","value":"Atom[124677]","doc":null,"summary":null},{"id":"Size","name":"Size","value":"Atom[201220]","doc":null,"summary":null},{"id":"Sizes","name":"Sizes","value":"Atom[201221]","doc":null,"summary":null},{"id":"Slot","name":"Slot","value":"Atom[428292]","doc":null,"summary":null},{"id":"Small","name":"Small","value":"Atom[127237]","doc":null,"summary":null},{"id":"Sortable","name":"Sortable","value":"Atom[431368]","doc":null,"summary":null},{"id":"Sorted","name":"Sorted","value":"Atom[138246]","doc":null,"summary":null},{"id":"Source","name":"Source","value":"Atom[202246]","doc":null,"summary":null},{"id":"Spacer","name":"Spacer","value":"Atom[218886]","doc":null,"summary":null},{"id":"Span","name":"Span","value":"Atom[57092]","doc":null,"summary":null},{"id":"Spellcheck","name":"Spellcheck","value":"Atom[235530]","doc":null,"summary":null},{"id":"Src","name":"Src","value":"Atom[205059]","doc":null,"summary":null},{"id":"Srcdoc","name":"Srcdoc","value":"Atom[285958]","doc":null,"summary":null},{"id":"Srclang","name":"Srclang","value":"Atom[310279]","doc":null,"summary":null},{"id":"Srcset","name":"Srcset","value":"Atom[205062]","doc":null,"summary":null},{"id":"Start","name":"Start","value":"Atom[270341]","doc":null,"summary":null},{"id":"Step","name":"Step","value":"Atom[379140]","doc":null,"summary":null},{"id":"Strike","name":"Strike","value":"Atom[37382]","doc":null,"summary":null},{"id":"Strong","name":"Strong","value":"Atom[467206]","doc":null,"summary":null},{"id":"Style","name":"Style","value":"Atom[394757]","doc":null,"summary":null},{"id":"Sub","name":"Sub","value":"Atom[438531]","doc":null,"summary":null},{"id":"Summary","name":"Summary","value":"Atom[474375]","doc":null,"summary":null},{"id":"Sup","name":"Sup","value":"Atom[476163]","doc":null,"summary":null},{"id":"Svg","name":"Svg","value":"Atom[476931]","doc":null,"summary":null},{"id":"System","name":"System","value":"Atom[477702]","doc":null,"summary":null},{"id":"Tabindex","name":"Tabindex","value":"Atom[322056]","doc":null,"summary":null},{"id":"Table","name":"Table","value":"Atom[383749]","doc":null,"summary":null},{"id":"Target","name":"Target","value":"Atom[184070]","doc":null,"summary":null},{"id":"Tbody","name":"Tbody","value":"Atom[3333]","doc":null,"summary":null},{"id":"Td","name":"Td","value":"Atom[51714]","doc":null,"summary":null},{"id":"Template","name":"Template","value":"Atom[478472]","doc":null,"summary":null},{"id":"Textarea","name":"Textarea","value":"Atom[225800]","doc":null,"summary":null},{"id":"Tfoot","name":"Tfoot","value":"Atom[54789]","doc":null,"summary":null},{"id":"Th","name":"Th","value":"Atom[85762]","doc":null,"summary":null},{"id":"Thead","name":"Thead","value":"Atom[217093]","doc":null,"summary":null},{"id":"Time","name":"Time","value":"Atom[10244]","doc":null,"summary":null},{"id":"Title","name":"Title","value":"Atom[289285]","doc":null,"summary":null},{"id":"Tr","name":"Tr","value":"Atom[35842]","doc":null,"summary":null},{"id":"Track","name":"Track","value":"Atom[110597]","doc":null,"summary":null},{"id":"Translate","name":"Translate","value":"Atom[133129]","doc":null,"summary":null},{"id":"Tt","name":"Tt","value":"Atom[19970]","doc":null,"summary":null},{"id":"Type","name":"Type","value":"Atom[39172]","doc":null,"summary":null},{"id":"Typemustmatch","name":"Typemustmatch","value":"Atom[170765]","doc":null,"summary":null},{"id":"U","name":"U","value":"Atom[11265]","doc":null,"summary":null},{"id":"Ul","name":"Ul","value":"Atom[59138]","doc":null,"summary":null},{"id":"Updateviacache","name":"Updateviacache","value":"Atom[11278]","doc":null,"summary":null},{"id":"Usemap","name":"Usemap","value":"Atom[386054]","doc":null,"summary":null},{"id":"Value","name":"Value","value":"Atom[333317]","doc":null,"summary":null},{"id":"Var","name":"Var","value":"Atom[96771]","doc":null,"summary":null},{"id":"Video","name":"Video","value":"Atom[195589]","doc":null,"summary":null},{"id":"Wbr","name":"Wbr","value":"Atom[377347]","doc":null,"summary":null},{"id":"Width","name":"Width","value":"Atom[426245]","doc":null,"summary":null},{"id":"Workertype","name":"Workertype","value":"Atom[480522]","doc":null,"summary":null},{"id":"Wrap","name":"Wrap","value":"Atom[483076]","doc":null,"summary":null},{"id":"Xmp","name":"Xmp","value":"Atom[75011]","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":"Module Atom provides integer codes (also known as atoms) for a fixed set of\nfrequently occurring HTML5 strings: tag names and attribute keys such as \"p\"\nand \"id\".\n\nSharing an atom's name between all elements with the same tag can result in\nfewer string allocations when tokenizing and parsing HTML5. Integer\ncomparisons are also generally faster than string comparisons.\n\nThe value of an atom's particular code is not guaranteed to stay the same\nbetween versions of this module. Neither is any ordering guaranteed:\nwhether Atom::H1 < Atom::H2 may also change. The codes are not guaranteed to\nbe dense. The only guarantees are that e.g. looking up \"div\" will yield\nAtom::Div, calling Atom::Div.to_s will return \"div\", and Atom::Div != 0.","summary":"<p>Module Atom provides integer codes (also known as atoms) for a fixed set of frequently occurring HTML5 strings: tag names and attribute keys such as \"p\" and \"id\".</p>","class_methods":[{"id":"string(s:Bytes):String-class-method","html_id":"string(s:Bytes):String-class-method","name":"string","doc":"returns a string whose contents are equal to s.","summary":"<p>returns a string whose contents are equal to s.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"Bytes"}],"args_string":"(s : Bytes) : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L73","def":{"name":"string","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"a = lookup(s)\nif a == 0\nelse\n  return a.to_s\nend\nString.new(s)\n"}}],"constructors":[{"id":"lookup(s:Bytes):Atom-class-method","html_id":"lookup(s:Bytes):Atom-class-method","name":"lookup","doc":"returns the Atom whose name is s. It returns zero if there is no such Atom.\nLookup is case sensitive","summary":"<p>returns the Atom whose name is s.</p>","abstract":false,"args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"Bytes"}],"args_string":"(s : Bytes) : Atom","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L62","def":{"name":"lookup","args":[{"name":"s","doc":null,"default_value":"","external_name":"s","restriction":"Bytes"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Atom","visibility":"Public","body":"if (s.size == 0) || s.size > MAX_ATOM_LEN\n  return Atom.zero\nend\nh = fnv(HASH0, s)\na = TABLE[h & (TABLE.size - 1).to_u32]\nif ((a & 255).to_i == s.size) && (match(a.string, s))\n  return a\nend\na = TABLE[(h >> 16) & (TABLE.size - 1).to_u32]\nif ((a & 255).to_i == s.size) && (match(a.string, s))\n  return a\nend\nAtom.zero\n"}}],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/naqvis/crystal-html5/HTML5/Atom/Atom","path":"HTML5/Atom/Atom.html","kind":"struct","full_name":"HTML5::Atom::Atom","name":"Atom","abstract":false,"superclass":{"html_id":"github.com/naqvis/crystal-html5/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/naqvis/crystal-html5/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html/atom/atom.cr","line_number":18,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5/Atom","kind":"module","full_name":"HTML5::Atom","name":"Atom"},"doc":null,"summary":null,"class_methods":[{"id":"[](value:Int)-class-method","html_id":"[](value:Int)-class-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"args_string":"(value : Int)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L21","def":{"name":"[]","args":[{"name":"value","doc":null,"default_value":"","external_name":"value","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(value.to_u32)"}},{"id":"zero-class-method","html_id":"zero-class-method","name":"zero","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L25","def":{"name":"zero","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"new(0_u32)"}}],"constructors":[],"instance_methods":[{"id":"==(o:Int)-instance-method","html_id":"==(o:Int)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"o","doc":null,"default_value":"","external_name":"o","restriction":"Int"}],"args_string":"(o : Int)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L46","def":{"name":"==","args":[{"name":"o","doc":null,"default_value":"","external_name":"o","restriction":"Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"o.to_u32 == @val"}},{"id":"==(o:Atom)-instance-method","html_id":"==(o:Atom)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"o","doc":null,"default_value":"","external_name":"o","restriction":"Atom"}],"args_string":"(o : Atom)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L50","def":{"name":"==","args":[{"name":"o","doc":null,"default_value":"","external_name":"o","restriction":"Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@val == o.val"}},{"id":"string-instance-method","html_id":"string-instance-method","name":"string","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L42","def":{"name":"string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"ATOM_TEXT[(@val >> 8)...((@val >> 8) &+ (@val & 255))]"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L38","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io << to_s"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L29","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"start = (@val >> 8).to_u32\nn = (@val & 255).to_u32\nif (start + n) > ATOM_TEXT.size\n  return \"\"\nend\nn = start &+ n\nATOM_TEXT[start.to_i...n.to_i]\n"}}],"macros":[{"id":"method_missing(call)-macro","html_id":"method_missing(call)-macro","name":"method_missing","doc":null,"summary":null,"abstract":false,"args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"args_string":"(call)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/atom/atom.cr#L57","def":{"name":"method_missing","args":[{"name":"call","doc":null,"default_value":"","external_name":"call","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"      @val.\n{{ call }}\n\n    \n"}}],"types":[]}]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/Attribute","path":"HTML5/Attribute.html","kind":"class","full_name":"HTML5::Attribute","name":"Attribute","abstract":false,"superclass":{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html/node.cr","line_number":32,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":"An Attribute is an attribute namespace-key-value triple. Namespace is\nnon-empty for foreign attributes like xlink, Key is alphabetic (and hence\ndoes not contain escapable characters like '&', '<' or '>'), and Val is\nunescaped (it looks like \"a<b\" rather than \"a&lt;b\").\n\nNamespace is only used by the parser, not the tokenizer.","summary":"<p>An Attribute is an attribute namespace-key-value triple.</p>","class_methods":[],"constructors":[{"id":"new(namespace=&quot;&quot;,key=&quot;&quot;,val=&quot;&quot;)-class-method","html_id":"new(namespace=&amp;quot;&amp;quot;,key=&amp;quot;&amp;quot;,val=&amp;quot;&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"namespace","doc":null,"default_value":"\"\"","external_name":"namespace","restriction":""},{"name":"key","doc":null,"default_value":"\"\"","external_name":"key","restriction":""},{"name":"val","doc":null,"default_value":"\"\"","external_name":"val","restriction":""}],"args_string":"(namespace = <span class=\"s\">&quot;&quot;</span>, key = <span class=\"s\">&quot;&quot;</span>, val = <span class=\"s\">&quot;&quot;</span>)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L37","def":{"name":"new","args":[{"name":"namespace","doc":null,"default_value":"\"\"","external_name":"namespace","restriction":""},{"name":"key","doc":null,"default_value":"\"\"","external_name":"key","restriction":""},{"name":"val","doc":null,"default_value":"\"\"","external_name":"val","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(namespace, key, val)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L40","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Attribute.new(namespace, key, val)"}},{"id":"key:String-instance-method","html_id":"key:String-instance-method","name":"key","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L34","def":{"name":"key","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@key"}},{"id":"key=(key:String)-instance-method","html_id":"key=(key:String)-instance-method","name":"key=","doc":null,"summary":null,"abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"args_string":"(key : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L34","def":{"name":"key=","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@key = key"}},{"id":"namespace:String-instance-method","html_id":"namespace:String-instance-method","name":"namespace","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L33","def":{"name":"namespace","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@namespace"}},{"id":"namespace=(namespace:String)-instance-method","html_id":"namespace=(namespace:String)-instance-method","name":"namespace=","doc":null,"summary":null,"abstract":false,"args":[{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":"String"}],"args_string":"(namespace : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L33","def":{"name":"namespace=","args":[{"name":"namespace","doc":null,"default_value":"","external_name":"namespace","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@namespace = namespace"}},{"id":"val:String-instance-method","html_id":"val:String-instance-method","name":"val","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L35","def":{"name":"val","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@val"}},{"id":"val=(val:String)-instance-method","html_id":"val=(val:String)-instance-method","name":"val=","doc":null,"summary":null,"abstract":false,"args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"args_string":"(val : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L35","def":{"name":"val=","args":[{"name":"val","doc":null,"default_value":"","external_name":"val","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@val = val"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/HTMLException","path":"HTML5/HTMLException.html","kind":"class","full_name":"HTML5::HTMLException","name":"HTMLException","abstract":false,"superclass":{"html_id":"github.com/naqvis/crystal-html5/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html.cr","line_number":19,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/naqvis/crystal-html5/HTML5/MaxBufferExceeded","kind":"class","full_name":"HTML5::MaxBufferExceeded","name":"MaxBufferExceeded"},{"html_id":"github.com/naqvis/crystal-html5/HTML5/NoProgressError","kind":"class","full_name":"HTML5::NoProgressError","name":"NoProgressError"}],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/MaxBufferExceeded","path":"HTML5/MaxBufferExceeded.html","kind":"class","full_name":"HTML5::MaxBufferExceeded","name":"MaxBufferExceeded","abstract":false,"superclass":{"html_id":"github.com/naqvis/crystal-html5/HTML5/HTMLException","kind":"class","full_name":"HTML5::HTMLException","name":"HTMLException"},"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/HTML5/HTMLException","kind":"class","full_name":"HTML5::HTMLException","name":"HTMLException"},{"html_id":"github.com/naqvis/crystal-html5/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html.cr","line_number":22,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message=&quot;maxbufferexceeded&quot;)-class-method","html_id":"new(message=&amp;quot;maxbufferexceeded&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"max buffer exceeded\"","external_name":"message","restriction":""}],"args_string":"(message = <span class=\"s\">&quot;max buffer exceeded&quot;</span>)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr#L23","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"max buffer exceeded\"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/Node","path":"HTML5/Node.html","kind":"class","full_name":"HTML5::Node","name":"Node","abstract":false,"superclass":{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html/node.cr","line_number":54,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr"},{"filename":"html/xpath/xpath.cr","line_number":5,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/xpath/xpath.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":"A Node consists of a NodeType and some data (tag name for element nodes,\ncontent for text) and are part of a tree of Nodes. Element nodes may also\nhave a `namespace` and contain an array of Attribute. `data` is unescaped, so\nthat it looks like \"a<b\" rather than \"a&lt;b\". For element nodes, `data_atom`\nis the atom for data, or zero if data is not a known tag name.\n\nAn empty namespace implies a \"http://www.w3.org/1999/xhtml\" namespace.\nSimilarly, \"math\" is short for \"http://www.w3.org/1998/Math/MathML\", and\n\"svg\" is short for \"http://www.w3.org/2000/svg\".","summary":"<p>A Node consists of a NodeType and some data (tag name for element nodes, content for text) and are part of a tree of Nodes.</p>","class_methods":[],"constructors":[{"id":"new(type,data_atom=Atom::Atom.zero,data=&quot;&quot;,namespace=&quot;&quot;,attr=Array(Attribute).new)-class-method","html_id":"new(type,data_atom=Atom::Atom.zero,data=&amp;quot;&amp;quot;,namespace=&amp;quot;&amp;quot;,attr=Array(Attribute).new)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"data_atom","doc":null,"default_value":"Atom::Atom.zero","external_name":"data_atom","restriction":""},{"name":"data","doc":null,"default_value":"\"\"","external_name":"data","restriction":""},{"name":"namespace","doc":null,"default_value":"\"\"","external_name":"namespace","restriction":""},{"name":"attr","doc":null,"default_value":"Array(Attribute).new","external_name":"attr","restriction":""}],"args_string":"(type, data_atom = <span class=\"t\">Atom</span><span class=\"t\">::</span><span class=\"t\">Atom</span>.zero, data = <span class=\"s\">&quot;&quot;</span>, namespace = <span class=\"s\">&quot;&quot;</span>, attr = <span class=\"t\">Array</span>(<span class=\"t\">Attribute</span>).<span class=\"k\">new</span>)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L75","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":""},{"name":"data_atom","doc":null,"default_value":"Atom::Atom.zero","external_name":"data_atom","restriction":""},{"name":"data","doc":null,"default_value":"\"\"","external_name":"data","restriction":""},{"name":"namespace","doc":null,"default_value":"\"\"","external_name":"namespace","restriction":""},{"name":"attr","doc":null,"default_value":"Array(Attribute).new","external_name":"attr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, data_atom, data, namespace, attr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"[](attribute_name:String)-instance-method","html_id":"[](attribute_name:String)-instance-method","name":"[]","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_name","doc":null,"default_value":"","external_name":"attribute_name","restriction":"String"}],"args_string":"(attribute_name : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L83","def":{"name":"[]","args":[{"name":"attribute_name","doc":null,"default_value":"","external_name":"attribute_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self[attribute_name]? || (raise(KeyError.new(\"Missing attribute: #{attribute_name}\")))"}},{"id":"[]?(attribute_name:String)-instance-method","html_id":"[]?(attribute_name:String)-instance-method","name":"[]?","doc":null,"summary":null,"abstract":false,"args":[{"name":"attribute_name","doc":null,"default_value":"","external_name":"attribute_name","restriction":"String"}],"args_string":"(attribute_name : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L87","def":{"name":"[]?","args":[{"name":"attribute_name","doc":null,"default_value":"","external_name":"attribute_name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attr.find do |a|\n  a.key == attribute_name\nend"}},{"id":"append_child(c:Node)-instance-method","html_id":"append_child(c:Node)-instance-method","name":"append_child","doc":"append_child adds a node as child of self.\nIt will raise exception if c already has a parent or siblings","summary":"<p>append_child adds a node as child of self.</p>","abstract":false,"args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Node"}],"args_string":"(c : Node)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L153","def":{"name":"append_child","args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (c.parent || c.prev_sibling) || c.next_sibling\n  raise(HTMLException.new(\"append_child called for an attached child Node\"))\nend\nlast = last_child\nif last\n  last.next_sibling = c\nelse\n  @first_child = c\nend\n@last_child = c\nc.parent = self\nc.prev_sibling = last\n"}},{"id":"attr:Array(Attribute)-instance-method","html_id":"attr:Array(Attribute)-instance-method","name":"attr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Attribute)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L65","def":{"name":"attr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Attribute)","visibility":"Public","body":"@attr"}},{"id":"attribute_value(name:String)-instance-method","html_id":"attribute_value(name:String)-instance-method","name":"attribute_value","doc":"returns the attribute value with specified name. if current node is `element?` it returns\nthe inner text or else it will scan through node attributes and returns the value of attribute matching the `name`\nreturns \"\" if no attribute is found.","summary":"<p>returns the attribute value with specified name.</p>","abstract":false,"args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"args_string":"(name : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/xpath/xpath.cr#L58","def":{"name":"attribute_value","args":[{"name":"name","doc":null,"default_value":"","external_name":"name","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if ((type == NodeType::Element) && parent.nil?) && (name == data)\n  return inner_text\nend\nattr.each do |a|\n  if a.key == name\n    return a.val\n  end\nend\n\"\"\n"}},{"id":"attributes-instance-method","html_id":"attributes-instance-method","name":"attributes","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L79","def":{"name":"attributes","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"attr.dup"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":"clone returns a new node with the same type, data and attributes.\nThe clone has no parent, no siblings and no children","summary":"<p>clone returns a new node with the same type, data and attributes.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L189","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Node.new(type: self.type, data_atom: self.data_atom, data: self.data, attr: self.attr.dup)"}},{"id":"comment?-instance-method","html_id":"comment?-instance-method","name":"comment?","doc":"Returns `true` if this node is a Comment Node","summary":"<p>Returns <code>true</code> if this node is a Comment Node</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L107","def":{"name":"comment?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type == NodeType::Comment"}},{"id":"data:String-instance-method","html_id":"data:String-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L63","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@data"}},{"id":"data_atom:Atom::Atom-instance-method","html_id":"data_atom:Atom::Atom-instance-method","name":"data_atom","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Atom::Atom","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L62","def":{"name":"data_atom","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Atom::Atom","visibility":"Public","body":"@data_atom"}},{"id":"doctype?-instance-method","html_id":"doctype?-instance-method","name":"doctype?","doc":"Returns `true` if this node is a Doctype Node","summary":"<p>Returns <code>true</code> if this node is a Doctype Node</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L112","def":{"name":"doctype?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type == NodeType::Doctype"}},{"id":"document?-instance-method","html_id":"document?-instance-method","name":"document?","doc":"Returns `true` if this node is a Document Node","summary":"<p>Returns <code>true</code> if this node is a Document Node</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L92","def":{"name":"document?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type == NodeType::Document"}},{"id":"element?-instance-method","html_id":"element?-instance-method","name":"element?","doc":"Returns `true` if this node is an Element Node","summary":"<p>Returns <code>true</code> if this node is an Element Node</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L97","def":{"name":"element?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type == NodeType::Element"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":"Returns `true` if this node is an Error Node","summary":"<p>Returns <code>true</code> if this node is an Error Node</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L117","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type == NodeType::Error"}},{"id":"first_child:Node?-instance-method","html_id":"first_child:Node?-instance-method","name":"first_child","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Node?","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L56","def":{"name":"first_child","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node | ::Nil","visibility":"Public","body":"@first_child"}},{"id":"inner_text-instance-method","html_id":"inner_text-instance-method","name":"inner_text","doc":"returns the inner text of current node","summary":"<p>returns the inner text of current node</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L326","def":{"name":"inner_text","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\noutput(io, self)\nio.to_s\n"}},{"id":"insert_before(new_child:Node,old_child:Node?)-instance-method","html_id":"insert_before(new_child:Node,old_child:Node?)-instance-method","name":"insert_before","doc":"insert_before inserts a new_child as a child of self, immediately before old_child\nin the sequence of self's children. old child may be nil, in which case new child\nis appended to the end of self's children.\n\nIt will raise exception if new child already has a parent or sibling","summary":"<p>insert_before inserts a new_child as a child of self, immediately before old_child in the sequence of self's children.</p>","abstract":false,"args":[{"name":"new_child","doc":null,"default_value":"","external_name":"new_child","restriction":"Node"},{"name":"old_child","doc":null,"default_value":"","external_name":"old_child","restriction":"Node | ::Nil"}],"args_string":"(new_child : Node, old_child : Node?)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L126","def":{"name":"insert_before","args":[{"name":"new_child","doc":null,"default_value":"","external_name":"new_child","restriction":"Node"},{"name":"old_child","doc":null,"default_value":"","external_name":"old_child","restriction":"Node | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (new_child.parent || new_child.prev_sibling) || new_child.next_sibling\n  raise(HTMLException.new(\"insert_before called for an attached child node\"))\nend\nif !old_child.nil?\n  prev, next_ = old_child.prev_sibling, old_child\nelse\n  prev, next_ = last_child, nil\nend\nif (p = prev)\n  p.next_sibling = new_child\nelse\n  @first_child = new_child\nend\nif (n = next_)\n  n.prev_sibling = new_child\nelse\n  @last_child = new_child\nend\nnew_child.parent = self\nnew_child.prev_sibling = prev\nnew_child.next_sibling = next_\n"}},{"id":"last_child:Node?-instance-method","html_id":"last_child:Node?-instance-method","name":"last_child","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Node?","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L57","def":{"name":"last_child","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node | ::Nil","visibility":"Public","body":"@last_child"}},{"id":"namespace:String-instance-method","html_id":"namespace:String-instance-method","name":"namespace","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L64","def":{"name":"namespace","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@namespace"}},{"id":"next_sibling:Node?-instance-method","html_id":"next_sibling:Node?-instance-method","name":"next_sibling","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Node?","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L59","def":{"name":"next_sibling","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node | ::Nil","visibility":"Public","body":"@next_sibling"}},{"id":"parent:Node?-instance-method","html_id":"parent:Node?-instance-method","name":"parent","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Node?","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L55","def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node | ::Nil","visibility":"Public","body":"@parent"}},{"id":"prev_sibling:Node?-instance-method","html_id":"prev_sibling:Node?-instance-method","name":"prev_sibling","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Node?","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L58","def":{"name":"prev_sibling","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node | ::Nil","visibility":"Public","body":"@prev_sibling"}},{"id":"remove_child(c:Node)-instance-method","html_id":"remove_child(c:Node)-instance-method","name":"remove_child","doc":"remove_child remove a node c that is a child of self. Afterwards, c will have\nno parent and no siblings.\n\nIt will raise exception if c's parent is not this node","summary":"<p>remove_child remove a node c that is a child of self.</p>","abstract":false,"args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Node"}],"args_string":"(c : Node)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L172","def":{"name":"remove_child","args":[{"name":"c","doc":null,"default_value":"","external_name":"c","restriction":"Node"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if c.parent == self\nelse\n  raise(HTMLException.new(\"remove_child called for a non-child node\"))\nend\nif @first_child == c\n  @first_child = c.next_sibling\nend\nif c.next_sibling\n  c.next_sibling.try(&.prev_sibling = c.prev_sibling)\nend\nif @last_child == c\n  @last_child = c.prev_sibling\nend\nif c.prev_sibling\n  c.prev_sibling.try(&.next_sibling = c.next_sibling)\nend\nc.parent = nil\nc.prev_sibling = nil\nc.next_sibling = nil\n"}},{"id":"render(io:IO):Nil-instance-method","html_id":"render(io:IO):Nil-instance-method","name":"render","doc":"`render` renders the parse tree node to the given `IO` writer.\n\nRendering is done on a 'best effort' basis: calling `parse` on the output of\n`render` will always result in something similar to the original tree, but it\nis not necessarily an exact clone unless the original tree was 'well-formed'.\n'Well-formed' is not easily specified; the HTML5 specification is\ncomplicated.\n\nCalling `parse` on arbitrary input typically results in a 'well-formed' parse\ntree. However, it is possible for Parse to yield a 'badly-formed' parse tree.\nFor example, in a 'well-formed' parse tree, no <a> element is a child of\nanother <a> element: parsing \"<a><a>\" results in two sibling elements.\nSimilarly, in a 'well-formed' parse tree, no <a> element is a child of a\n<table> element: parsing \"<p><table><a>\" results in a <p> with two sibling\nchildren; the <a> is reparented to the <table>'s parent. However, calling\nParse on \"<a><table><a>\" does not return an error, but the result has an <a>\nelement with an <a> child, and is therefore not 'well-formed'.\n\nProgrammatically constructed trees are typically also 'well-formed', but it\nis possible to construct a tree that looks innocuous but, when rendered and\nre-parsed, results in a different tree. A simple example is that a solitary\ntext node would become a tree containing <html>, <head> and <body> elements.\nAnother example is that the programmatic equivalent of \"a<head>b</head>c\"\nbecomes \"<html><head><head/><body>abc</body></html>\".","summary":"<p><code><a href=\"../HTML5/Node.html#render(io:IO):Nil-instance-method\">#render</a></code> renders the parse tree node to the given <code>IO</code> writer.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L218","def":{"name":"render","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"case self.type\nwhen .error?\n  raise(HTMLException.new(\"cannot render an Error Node\"))\nwhen .text?\n  HTML5.escape(io, data)\n  return\nwhen .document?\n  c = first_child\n  while c\n    c.render(io)\n    c = c.next_sibling\n  end\n  return\nwhen .element?\nwhen .comment?\n  io << \"<!--\"\n  io << data\n  io << \"-->\"\n  return\nwhen .doctype?\n  (io << \"<!DOCTYPE \") << data\n  p, s = \"\", \"\"\n  attr.each do |a|\n    if (a.key.compare(\"public\", case_insensitive: true)) == 0\n      p = a.val\n    else\n      if (a.key.compare(\"system\", case_insensitive: true)) == 0\n        s = a.val\n      end\n    end\n  end\n  if !p.empty?\n    io << \" PUBLIC \"\n    write_quoted(io, p)\n    if s.empty?\n    else\n      io << \" \"\n      write_quoted(io, s)\n    end\n  else\n    if !s.empty?\n      io << \" SYSTEM \"\n      write_quoted(io, s)\n    end\n  end\n  io << \">\"\n  return\nwhen .raw?\n  io << data\n  return\nelse\n  raise(HTMLException.new(\"unknown node type\"))\nend\n(io << \"<\") << data\nattr.each do |a|\n  io << \" \"\n  if namespace.empty?\n  else\n    (io << namespace) << \":\"\n  end\n  (io << a.key) << \"=\\\"\"\n  HTML5.escape(io, a.val)\n  io << \"\\\"\"\nend\nif VOID_ELEMENTS.fetch(data, false)\n  if first_child\n    raise(HTMLException.new(\"void element #{data} has child nodes\"))\n  end\n  io << \"/>\"\n  return\nend\nio << \">\"\nif ((c = first_child) && (c.type == NodeType::Text)) && (c.data.starts_with?(\"\\n\"))\n  if [\"pre\", \"listing\", \"textarea\"].includes?(c.data)\n    io << \"\\n\"\n  end\nend\ncase data\nwhen \"iframe\", \"noembed\", \"noframes\", \"noscript\", \"plaintext\", \"script\", \"style\", \"xmp\"\n  c = first_child\n  while c\n    if c.type == NodeType::Text\n      io << c.data\n    else\n      c.render(io)\n    end\n    c = c.next_sibling\n  end\n  if (data.compare(\"plaintext\", case_insensitive: true)) == 0\n    return\n  end\nelse\n  c = first_child\n  while c\n    c.render(io)\n    c = c.next_sibling\n  end\nend\n((io << \"</\") << data) << \">\"\n"}},{"id":"text?-instance-method","html_id":"text?-instance-method","name":"text?","doc":"Returns `true` if this node is a Text Node","summary":"<p>Returns <code>true</code> if this node is a Text Node</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L102","def":{"name":"text?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"type == NodeType::Text"}},{"id":"to_html(self_only:Bool=true)-instance-method","html_id":"to_html(self_only:Bool=true)-instance-method","name":"to_html","doc":"Renders node to HTML. `self_only` will render current node only, but if its false\nit will return the HTML of current node as well as all of its children","summary":"<p>Renders node to HTML.</p>","abstract":false,"args":[{"name":"self_only","doc":null,"default_value":"true","external_name":"self_only","restriction":"Bool"}],"args_string":"(self_only : Bool = <span class=\"n\">true</span>)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L334","def":{"name":"to_html","args":[{"name":"self_only","doc":null,"default_value":"true","external_name":"self_only","restriction":"Bool"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"io = IO::Memory.new\nif self_only\n  render(io)\nelse\n  c = first_child\n  while c\n    c.render(io)\n    c = next_sibling\n  end\nend\nio.to_s\n"}},{"id":"type:NodeType-instance-method","html_id":"type:NodeType-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : NodeType","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L61","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"NodeType","visibility":"Public","body":"@type"}},{"id":"xpath(path:String):Node?-instance-method","html_id":"xpath(path:String):Node?-instance-method","name":"xpath","doc":"Searches this node for XPath *path*. Returns first matched `HTML5::Node` or `nil`","summary":"<p>Searches this node for XPath <em>path</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : Node?","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/xpath/xpath.cr#L7","def":{"name":"xpath","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Node | ::Nil","visibility":"Public","body":"expr = XPath2.compile(path)\nt = expr.select(HTMLNavigator.new(self, self))\nif t.move_next\n  return get_current_node(t.current.as(XPath2::NodeNavigator))\nend\nnil\n"}},{"id":"xpath_bool(path:String)-instance-method","html_id":"xpath_bool(path:String)-instance-method","name":"xpath_bool","doc":"Searches this node for XPath *path* and restricts the return type to `String`.","summary":"<p>Searches this node for XPath <em>path</em> and restricts the return type to <code>String</code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/xpath/xpath.cr#L44","def":{"name":"xpath_bool","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(xpath_evaluate(path)).as(String)"}},{"id":"xpath_evaluate(path)-instance-method","html_id":"xpath_evaluate(path)-instance-method","name":"xpath_evaluate","doc":"Searches this node for XPath *path* and return result with appropriate type\n`(Bool | Float64 | String | NodeIterator | Nil)`","summary":"<p>Searches this node for XPath <em>path</em> and return result with appropriate type <code>(Bool | Float64 | String | NodeIterator | Nil)</code></p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/xpath/xpath.cr#L50","def":{"name":"xpath_evaluate","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"expr = XPath2.compile(path)\nexpr.evaluate(HTMLNavigator.new(self, self))\n"}},{"id":"xpath_float(path:String)-instance-method","html_id":"xpath_float(path:String)-instance-method","name":"xpath_float","doc":"Searches this node for XPath *path* and restricts the return type to `Float64`.","summary":"<p>Searches this node for XPath <em>path</em> and restricts the return type to <code>Float64</code>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/xpath/xpath.cr#L39","def":{"name":"xpath_float","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(xpath_evaluate(path)).as(Float64)"}},{"id":"xpath_nodes(path:String):Array(Node)-instance-method","html_id":"xpath_nodes(path:String):Array(Node)-instance-method","name":"xpath_nodes","doc":"Searches this node for XPath *path*. Returns all of the matched `HTML5::Node`","summary":"<p>Searches this node for XPath <em>path</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String) : Array(Node)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/xpath/xpath.cr#L15","def":{"name":"xpath_nodes","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Node)","visibility":"Public","body":"elems = Array(Node).new\nexpr = XPath2.compile(path)\nif (t = expr.select(HTMLNavigator.new(self, self)))\n  while t.move_next\n    nav = t.current.as(XPath2::NodeNavigator)\n    n = get_current_node(nav)\n    if elems.size > 0 && ((elems[0] == n) || (((nav.node_type == XPath2::NodeType::Attribute) && (nav.local_name == elems[0].data)) && (nav.value == elems[0].inner_text)))\n      next\n    end\n    elems << n\n  end\nend\nelems\n"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/NodeType","path":"HTML5/NodeType.html","kind":"enum","full_name":"HTML5::NodeType","name":"NodeType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/naqvis/crystal-html5/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/naqvis/crystal-html5/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html/node.cr","line_number":6,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Error","name":"Error","value":"0_u32","doc":null,"summary":null},{"id":"Text","name":"Text","value":"1_u32","doc":null,"summary":null},{"id":"Document","name":"Document","value":"2_u32","doc":null,"summary":null},{"id":"Element","name":"Element","value":"3_u32","doc":null,"summary":null},{"id":"Comment","name":"Comment","value":"4_u32","doc":null,"summary":null},{"id":"Doctype","name":"Doctype","value":"5_u32","doc":null,"summary":null},{"id":"Raw","name":"Raw","value":"6_u32","doc":"Raw nodes are not returned by the parser, but can be part of the Node tree\npassed to insert raw HTML (without escaping). If so, this shard makes no guarantee\nthat the rendered HTML is secure (from e.g. Cross Site Scripting attacks) or well-formed.","summary":"<p>Raw nodes are not returned by the parser, but can be part of the Node tree passed to insert raw HTML (without escaping).</p>"},{"id":"ScopeMarker","name":"ScopeMarker","value":"7_u32","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":"NodeType is a type of a Node","summary":"<p>NodeType is a type of a Node</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"comment?-instance-method","html_id":"comment?-instance-method","name":"comment?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L11","def":{"name":"comment?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Comment"}},{"id":"doctype?-instance-method","html_id":"doctype?-instance-method","name":"doctype?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L12","def":{"name":"doctype?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Doctype"}},{"id":"document?-instance-method","html_id":"document?-instance-method","name":"document?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L9","def":{"name":"document?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Document"}},{"id":"element?-instance-method","html_id":"element?-instance-method","name":"element?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L10","def":{"name":"element?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Element"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L7","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Error"}},{"id":"raw?-instance-method","html_id":"raw?-instance-method","name":"raw?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L16","def":{"name":"raw?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Raw"}},{"id":"scope_marker?-instance-method","html_id":"scope_marker?-instance-method","name":"scope_marker?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L17","def":{"name":"scope_marker?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == ScopeMarker"}},{"id":"text?-instance-method","html_id":"text?-instance-method","name":"text?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/node.cr#L8","def":{"name":"text?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Text"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/NoProgressError","path":"HTML5/NoProgressError.html","kind":"class","full_name":"HTML5::NoProgressError","name":"NoProgressError","abstract":false,"superclass":{"html_id":"github.com/naqvis/crystal-html5/HTML5/HTMLException","kind":"class","full_name":"HTML5::HTMLException","name":"HTMLException"},"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/HTML5/HTMLException","kind":"class","full_name":"HTML5::HTMLException","name":"HTMLException"},{"html_id":"github.com/naqvis/crystal-html5/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html.cr","line_number":28,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(message=&quot;multiplereadcallsreturnsnodataorerror&quot;)-class-method","html_id":"new(message=&amp;quot;multiplereadcallsreturnsnodataorerror&amp;quot;)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"message","doc":null,"default_value":"\"multiple read calls returns no data or error\"","external_name":"message","restriction":""}],"args_string":"(message = <span class=\"s\">&quot;multiple read calls returns no data or error&quot;</span>)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html.cr#L29","def":{"name":"new","args":[{"name":"message","doc":null,"default_value":"\"multiple read calls returns no data or error\"","external_name":"message","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(message)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/Span","path":"HTML5/Span.html","kind":"class","full_name":"HTML5::Span","name":"Span","abstract":false,"superclass":{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html/token.cr","line_number":79,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":"Span is a range of bytes in a Tokenizer's buffer. The start is inclusive,\nthe end is exclusive.\n:nodoc:","summary":"<p>Span is a range of bytes in a Tokenizer's buffer.</p>","class_methods":[],"constructors":[{"id":"new(start=0,end__arg0=0)-class-method","html_id":"new(start=0,end__arg0=0)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"0","external_name":"start","restriction":""},{"name":"__arg0","doc":null,"default_value":"0","external_name":"end","restriction":""}],"args_string":"(start = <span class=\"n\">0</span>, end __arg0 = <span class=\"n\">0</span>)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L83","def":{"name":"new","args":[{"name":"start","doc":null,"default_value":"0","external_name":"start","restriction":""},{"name":"__arg0","doc":null,"default_value":"0","external_name":"end","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(start, __arg0)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L90","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"Span.new(start, end)"}},{"id":"end:Int32-instance-method","html_id":"end:Int32-instance-method","name":"end","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L81","def":{"name":"end","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@end"}},{"id":"end=(end__arg0:Int32)-instance-method","html_id":"end=(end__arg0:Int32)-instance-method","name":"end=","doc":null,"summary":null,"abstract":false,"args":[{"name":"__arg0","doc":null,"default_value":"","external_name":"end","restriction":"Int32"}],"args_string":"(end __arg0 : Int32)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L81","def":{"name":"end=","args":[{"name":"__arg0","doc":null,"default_value":"","external_name":"end","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@end = __arg0"}},{"id":"start:Int32-instance-method","html_id":"start:Int32-instance-method","name":"start","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L80","def":{"name":"start","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@start"}},{"id":"start=(start:Int32)-instance-method","html_id":"start=(start:Int32)-instance-method","name":"start=","doc":null,"summary":null,"abstract":false,"args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"args_string":"(start : Int32)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L80","def":{"name":"start=","args":[{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"Int32"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@start = start"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L86","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io << \"Span(start: #{start}, end: #{end})\""}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/Token","path":"HTML5/Token.html","kind":"class","full_name":"HTML5::Token","name":"Token","abstract":false,"superclass":{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html/token.cr","line_number":26,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":"A Token consists of a TokenType and some data (tag name for start and end\ntags, content for text, comments and doctypes). A tag Token may also contain\nan array of Attributes. data is unescaped for all Tokens (it looks like \"a<b\"\nrather than \"a&lt;b\"). For tag Tokens, data_atom is the atom for data, or\nzero if data is not a known tag name.","summary":"<p>A Token consists of a TokenType and some data (tag name for start and end tags, content for text, comments and doctypes).</p>","class_methods":[],"constructors":[{"id":"new(type=TokenType::Error,data_atom=Atom::Atom.zero,data=&quot;&quot;,attr=Array(Attribute).new(0))-class-method","html_id":"new(type=TokenType::Error,data_atom=Atom::Atom.zero,data=&amp;quot;&amp;quot;,attr=Array(Attribute).new(0))-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"TokenType::Error","external_name":"type","restriction":""},{"name":"data_atom","doc":null,"default_value":"Atom::Atom.zero","external_name":"data_atom","restriction":""},{"name":"data","doc":null,"default_value":"\"\"","external_name":"data","restriction":""},{"name":"attr","doc":null,"default_value":"Array(Attribute).new(0)","external_name":"attr","restriction":""}],"args_string":"(type = <span class=\"t\">TokenType</span><span class=\"t\">::</span><span class=\"t\">Error</span>, data_atom = <span class=\"t\">Atom</span><span class=\"t\">::</span><span class=\"t\">Atom</span>.zero, data = <span class=\"s\">&quot;&quot;</span>, attr = <span class=\"t\">Array</span>(<span class=\"t\">Attribute</span>).<span class=\"k\">new</span>(<span class=\"n\">0</span>))","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L32","def":{"name":"new","args":[{"name":"type","doc":null,"default_value":"TokenType::Error","external_name":"type","restriction":""},{"name":"data_atom","doc":null,"default_value":"Atom::Atom.zero","external_name":"data_atom","restriction":""},{"name":"data","doc":null,"default_value":"\"\"","external_name":"data","restriction":""},{"name":"attr","doc":null,"default_value":"Array(Attribute).new(0)","external_name":"attr","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(type, data_atom, data, attr)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"attr:Array(Attribute)-instance-method","html_id":"attr:Array(Attribute)-instance-method","name":"attr","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(Attribute)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L30","def":{"name":"attr","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(Attribute)","visibility":"Public","body":"@attr"}},{"id":"attr=(attr:Array(Attribute))-instance-method","html_id":"attr=(attr:Array(Attribute))-instance-method","name":"attr=","doc":null,"summary":null,"abstract":false,"args":[{"name":"attr","doc":null,"default_value":"","external_name":"attr","restriction":"Array(Attribute)"}],"args_string":"(attr : Array(Attribute))","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L30","def":{"name":"attr=","args":[{"name":"attr","doc":null,"default_value":"","external_name":"attr","restriction":"Array(Attribute)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@attr = attr"}},{"id":"data:String-instance-method","html_id":"data:String-instance-method","name":"data","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L29","def":{"name":"data","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@data"}},{"id":"data=(data:String)-instance-method","html_id":"data=(data:String)-instance-method","name":"data=","doc":null,"summary":null,"abstract":false,"args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"args_string":"(data : String)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L29","def":{"name":"data=","args":[{"name":"data","doc":null,"default_value":"","external_name":"data","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data = data"}},{"id":"data_atom:Atom::Atom-instance-method","html_id":"data_atom:Atom::Atom-instance-method","name":"data_atom","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Atom::Atom","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L28","def":{"name":"data_atom","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Atom::Atom","visibility":"Public","body":"@data_atom"}},{"id":"data_atom=(data_atom:Atom::Atom)-instance-method","html_id":"data_atom=(data_atom:Atom::Atom)-instance-method","name":"data_atom=","doc":null,"summary":null,"abstract":false,"args":[{"name":"data_atom","doc":null,"default_value":"","external_name":"data_atom","restriction":"Atom::Atom"}],"args_string":"(data_atom : Atom::Atom)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L28","def":{"name":"data_atom=","args":[{"name":"data_atom","doc":null,"default_value":"","external_name":"data_atom","restriction":"Atom::Atom"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@data_atom = data_atom"}},{"id":"tag_string-instance-method","html_id":"tag_string-instance-method","name":"tag_string","doc":"returns a string representation of a tag Token's data and attr","summary":"<p>returns a string representation of a tag Token's data and attr</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L36","def":{"name":"tag_string","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if attr.size == 0\n  return data\nend\nbuf = IO::Memory.new\nbuf.write(data.to_slice)\nattr.each do |a|\n  buf << \" \"\n  buf << a.key\n  buf << \"=\\\"\"\n  HTML5.escape(buf, a.val)\n  buf << \"\\\"\"\nend\nbuf.to_s\n"}},{"id":"to_s(io:IO):Nil-instance-method","html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Appends a short String representation of this object\nwhich includes its class name and its object address.\n\n```\nclass Person\n  def initialize(@name : String, @age : Int32)\n  end\nend\n\nPerson.new(\"John\", 32).to_s # => #<Person:0x10a199f20>\n```","summary":"<p>Appends a short String representation of this object which includes its class name and its object address.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L71","def":{"name":"to_s","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"io << to_s"}},{"id":"to_s-instance-method","html_id":"to_s-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L50","def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"case type\nwhen .error?\n  \"\"\nwhen .text?\n  HTML5.escape_string(data)\nwhen .start_tag?\n  \"<#{tag_string()}>\"\nwhen .end_tag?\n  \"</#{tag_string()}>\"\nwhen .self_closing_tag?\n  \"<#{tag_string()}/>\"\nwhen .comment?\n  \"<!--#{data}-->\"\nwhen .doctype?\n  \"<!DOCTYPE #{data}>\"\nelse\n  raise(HTMLException.new(\"Invalid Token\"))\nend"}},{"id":"type:TokenType-instance-method","html_id":"type:TokenType-instance-method","name":"type","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : TokenType","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L27","def":{"name":"type","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TokenType","visibility":"Public","body":"@type"}},{"id":"type=(type:TokenType)-instance-method","html_id":"type=(type:TokenType)-instance-method","name":"type=","doc":null,"summary":null,"abstract":false,"args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"TokenType"}],"args_string":"(type : TokenType)","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L27","def":{"name":"type=","args":[{"name":"type","doc":null,"default_value":"","external_name":"type","restriction":"TokenType"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@type = type"}}],"macros":[],"types":[]},{"html_id":"github.com/naqvis/crystal-html5/HTML5/TokenType","path":"HTML5/TokenType.html","kind":"enum","full_name":"HTML5::TokenType","name":"TokenType","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/naqvis/crystal-html5/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/naqvis/crystal-html5/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/naqvis/crystal-html5/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/naqvis/crystal-html5/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"html/token.cr","line_number":4,"url":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr"}],"repository_name":"github.com/naqvis/crystal-html5","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"Error","name":"Error","value":"0_u32","doc":"Error means that an error occurred during tokenization","summary":"<p>Error means that an error occurred during tokenization</p>"},{"id":"Text","name":"Text","value":"1_u32","doc":"Text means a text node","summary":"<p>Text means a text node</p>"},{"id":"StartTag","name":"StartTag","value":"2_u32","doc":"StartTag looks like <a>","summary":"<p>StartTag looks like &lt;a></p>"},{"id":"EndTag","name":"EndTag","value":"3_u32","doc":"EndTag looks like </a>","summary":"<p>EndTag looks like &lt;/a></p>"},{"id":"SelfClosingTag","name":"SelfClosingTag","value":"4_u32","doc":"SelfClosing tag looks like <br/>","summary":"<p>SelfClosing tag looks like &lt;br/></p>"},{"id":"Comment","name":"Comment","value":"5_u32","doc":"Comment looks like <!--x-->","summary":"<p>Comment looks like &lt;!--x--></p>"},{"id":"Doctype","name":"Doctype","value":"6_u32","doc":"Doctype looks like <!DOCTYPE x>","summary":"<p>Doctype looks like &lt;!DOCTYPE x></p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/naqvis/crystal-html5/HTML5","kind":"module","full_name":"HTML5","name":"HTML5"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"comment?-instance-method","html_id":"comment?-instance-method","name":"comment?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L16","def":{"name":"comment?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Comment"}},{"id":"doctype?-instance-method","html_id":"doctype?-instance-method","name":"doctype?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L18","def":{"name":"doctype?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Doctype"}},{"id":"end_tag?-instance-method","html_id":"end_tag?-instance-method","name":"end_tag?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L12","def":{"name":"end_tag?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == EndTag"}},{"id":"error?-instance-method","html_id":"error?-instance-method","name":"error?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L6","def":{"name":"error?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Error"}},{"id":"self_closing_tag?-instance-method","html_id":"self_closing_tag?-instance-method","name":"self_closing_tag?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L14","def":{"name":"self_closing_tag?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == SelfClosingTag"}},{"id":"start_tag?-instance-method","html_id":"start_tag?-instance-method","name":"start_tag?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L10","def":{"name":"start_tag?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == StartTag"}},{"id":"text?-instance-method","html_id":"text?-instance-method","name":"text?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/naqvis/crystal-html5/blob/1e865fa8e2dcef4b0e629b1b4a61c6aaf10715f2/src/html/token.cr#L8","def":{"name":"text?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Text"}}],"macros":[],"types":[]}]}]}}